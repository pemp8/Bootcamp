// <auto-generated />
using System;
using BackEndNETLINUX.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEndNETLINUX.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("BackEndNETLINUX.Models.RegistroTiempo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("TiempoEntrada")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("TiempoSalida")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("TiempoTrabajado")
                        .HasColumnType("TEXT");

                    b.Property<int>("TrabajadorID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TrabajadorID");

                    b.ToTable("RegistrosTiempo");
                });

            modelBuilder.Entity("BackEndNETLINUX.Models.Trabajador", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Trabajadores");
                });

            modelBuilder.Entity("BackEndNETLINUX.Models.RegistroTiempo", b =>
                {
                    b.HasOne("BackEndNETLINUX.Models.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("TrabajadorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajador");
                });
#pragma warning restore 612, 618
        }
    }
}
